package palette;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

import components.LineProcessor;
import components.Utilities;
import models.Palette;
import models.PaletteBucket;

public class TypeB {

	public static ArrayList<PaletteBucket> Parse(InputStream pal) throws IOException {
		// Type B (VALIDSAVEFILE: lists R,G,B then lists ranges)
		ArrayList<float[]> ranges = new ArrayList<float[]>();

		Utilities.ReadFile(pal, (String l) -> {			
			if (l.isBlank()) return;

			// check number of components per line
			String[] split = l.split(",");		
			
			if(split.length == 2) {
				// this line is a value range [start, end]
				ranges.add(new float[] { Float.parseFloat(split[0]), Float.parseFloat(split[1]) }); 
			}
			else if (split.length == 3){ 
				// this line is a palette element [R,G,B]
				paletteColors.push([parseInt(.95 * parseInt(components[0],10)), 
									parseInt(.95 * parseInt(components[1],10)), 
									parseInt(.95 * parseInt(components[2],10))]); 
			}
		});
		
		return palette;
	}
}