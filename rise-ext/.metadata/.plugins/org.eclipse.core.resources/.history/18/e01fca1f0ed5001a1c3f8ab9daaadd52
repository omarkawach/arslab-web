package controllers;

import java.io.IOException;
import java.io.InputStream;
import java.util.Dictionary;
import java.util.HashMap;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import cdpp.celldevs;
import components.CustomException;
import components.Utilities;
import palette.typeA;
 
@RestController
public class ParserController {
    
   @PostMapping("/parser/palette/typeA")
   // @ResponseBody
   public ResponseEntity<String> parserPaletteTypeA(@RequestParam("pal") MultipartFile pal)
   {    	        
       try {
       	typeA.Parse(pal.getInputStream());
       	
       	return new ResponseEntity<String>("Yessir!", HttpStatus.OK);
       } 
       catch (Exception e) {
       	throw new CustomException(HttpStatus.BAD_REQUEST, e.getMessage());
       }
   }
   
  @PostMapping("/parser/cdpp/celldevs")
  // @ResponseBody
  public ResponseEntity<String> parserCdppCellDevs(@RequestParam("ma") MultipartFile ma, @RequestParam("val") MultipartFile val, @RequestParam("log") MultipartFile log)
  {    	        
      try {        	
      	celldevs.Parse(ma.getInputStream(), val.getInputStream(), log.getInputStream());
      	
      	return new ResponseEntity<String>("Yessir!", HttpStatus.OK);
      } 
      catch (Exception e) {
      	throw new CustomException(HttpStatus.BAD_REQUEST, e.getMessage());
      }
  }
    
    @ExceptionHandler(CustomException.class)
    public ResponseEntity<String> handleException(CustomException e) {
        return ResponseEntity.status(e.getStatus()).body(e.getMessage());
    }
}