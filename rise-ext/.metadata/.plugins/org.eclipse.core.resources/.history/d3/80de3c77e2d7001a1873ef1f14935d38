package parsers.cdpp;

import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import components.Utilities;
import models.MessageCA;
import models.Model;
import models.ModelCdpp;
import models.Parsed;
import models.Simulation;
import shared.Ma;
import shared.Val;

public class Devs {

	private static List<Message> messages;
		
	public static Parsed Parse(String name, InputStream ma, InputStream log)  throws IOException {		
		List<? extends Model> models = Ma.Parse(ma);
		
		Simulation sim = new Simulation(name, "Cell-DEVS", "CDpp", models);
		
		messages = ParseLog(models, log);
		
		return new Parsed(sim, messages);
	}
		
	private static List<Message> ParseLog(List<Model> models, InputStream log) throws IOException {		
		// Merge all possible 00:000 frame messages (val > rows > global)
		messages = Utilities.MergeFrames(model.GlobalFrame(), model.RowFrame());
		
		if (val != null) messages = Utilities.MergeFrames(messages, Val.Parse(val, model));
		
		Utilities.ReadFile(log, (String l) -> {
			// Mensaje Y / 00:00:05:000 / lug(9,35,0)(1873) / out /    101.00000 para lug(02)
			// probably empty line
			if (!l.startsWith("Mensaje Y")) return;
			
			String[] split = Arrays.stream(l.split("/"))
								   .map(s -> s.trim())
								   .toArray(String[]::new);

			String[] tmp1 = split[2].split("\\(");
			String[] tmp2 = tmp1[1].substring(0, tmp1[1].length() - 1).split(",");
			
			String t = split[1]; 														// time
			String m = tmp1[0];															// model name;					
			String p = split[3];														// port
			String v = split[4].split("\\s+")[0];
			
			int[] c = new int[3];

			c[0] = Integer.parseInt(tmp2[0]);
			c[1] = Integer.parseInt(tmp2[1]);
			c[2] = (tmp2.length == 2) ? 0 : Integer.parseInt(tmp2[2]);
			
			// Magic
			BigDecimal number = new BigDecimal(v);  
			
			v = number.stripTrailingZeros().toPlainString();
						
			messages.add(new MessageCA(t, m, c, p, v));
		});
		
		return messages;
	}
}