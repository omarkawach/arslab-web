package palette;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

import components.LineProcessor;
import components.Utilities;
import models.Palette;
import models.PaletteBucket;

public class TypeA {

	public static void Parse(InputStream pal) throws IOException {
		// Type A: [rangeBegin;rangeEnd] R G B
		ArrayList<PaletteBucket> palette = new ArrayList<PaletteBucket>();
		
		LineProcessor<Palette> lp = (Palette c, String l) -> {
			String s = l;
			
			// skip it it's probably an empty line
			if (l.length() < 7) return;
			
			var start = parseFloat(line.substr(1));
			var end   = parseFloat(line.substr(line.indexOf(';') + 1));
			var rgb = line.substr(line.indexOf(']') + 2).trim().split(' ');
			
			// clean empty elements
			for (var j = rgb.length; j-- > 0;) {
				if (rgb[j].trim() == "") rgb.splice(j, 1);
			}			
			
			// Parse as decimal int
			var r = parseInt(rgb[0], 10);
			var g = parseInt(rgb[1], 10);
			var b = parseInt(rgb[2], 10);
			
			scale.AddClass(start, end, [r, g, b]);
		};
		
		Utilities.ReadFile(pal, palette, lp);
	}
}